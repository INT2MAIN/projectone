jquery 效果
jQuery隐藏显示
      $(selector).hide(speed,callback);
      $(selector).show(speed,callback);
      可选的 speed 参数规定隐藏/显示的速度，可以取以下值："slow"、"fast" 或毫秒。
      可选的 callback 参数是隐藏或显示完成后所执行的函数名称。
      例：$("button").click(function(){
          $("p").hide(1000);
          });

          $(document).ready(function(){
          $("button").click(function(){
          $("p").toggle();来回切换显示隐藏，没有速度
           });
          });
jQuery 淡入淡出
      fadeIn()
      fadeOut()
      fadeToggle()
      fadeTo()
      前三种方法都是相类似的用法
      1.jQuery fadeIn() 用于淡入已隐藏的元素。
      语法：
      $(selector).fadeIn(speed,callback);
      $("button").click(function(){
         $("#div1").fadeIn();
         $("#div2").fadeIn("slow");
         $("#div3").fadeIn(3000);
       });
       其中div1,2,3都是被隐藏的。display:none;然后再淡入
      2.jQuery fadeOut() 方法
      jQuery fadeOut() 方法用于淡出可见元素。
      3.jQuery fadeToggle() 方法
      jQuery fadeToggle() 方法可以在 fadeIn() 与 fadeOut() 方法之间进行切换。
      $("button").click(function(){
        $("#div1").fadeToggle();
        $("#div2").fadeToggle("slow");
        $("#div3").fadeToggle(3000);
      });
      4.jQuery fadeTo() 方法
      jQuery fadeTo() 方法允许渐变为给定的不透明度（值介于 0 与 1 之间）。
      例：
      $("button").click(function(){
         $("#div1").fadeTo("slow",0.15);
         $("#div2").fadeTo("slow",0.4);
         $("#div3").fadeTo("slow",0.7);
       });
jQuery 滑动
        jQuery 拥有以下滑动方法：
        slideDown()方法用于向下滑动元素。滑动显示已隐藏的元素
        slideUp()
        slideToggle()
        三个方法异曲同工，相差无几的用法
        jQuery slideDown() 方法用于向下滑动元素。
        $(selector).slideDown(speed,callback);
        <script type="text/javascript">
        $(document).ready(function(){
        $(".flip").click(function(){
            $(".panel").slideToggle("slow");
          });
        });
        </script>

        <style type="text/css">
        div.panel,p.flip
        {
        margin:0px;
        padding:5px;
        text-align:center;
        background:#e5eecc;
        border:solid 1px #c3c3c3;
        }
        div.panel
        {
        height:120px;
        display:none;
        }
        </style>
        </head>

        <body>

        <div class="panel">
        <p>W3School - 领先的 Web 技术教程站点</p>
        <p>在 W3School，你可以找到你所需要的所有网站建设教程。</p>
        </div>

        <p class="flip">请点击这里</p>


jQuery 动画 - animate() 方法
        jQuery animate() 方法用于创建自定义动画。
        语法：
        $(selector).animate({params},speed,callback);
        必需的 params 参数定义形成动画的 CSS 属性。
        可选的 speed 参数规定效果的时长。它可以取以下值："slow"、"fast" 或毫秒。
        可选的 callback 参数是动画完成后所执行的函数名称。
        默认情况下，所有 HTML 元素的位置都是静态的，并且无法移动。
        如需对位置进行操作，记得首先把元素的 CSS position 属性设置为 relative、fixed 或 absolute。
        例：
        $(document).ready(function(){
          $("button").click(function(){
            $("div").animate({left:'250px'});
          });
        });
        <div style="background:#98bf21;height:100px;width:100px;position:absolute;">
        </div>
jQuery animate() - 操作多个属性
        请注意，生成动画的过程中可同时使用多个属性：
        语法：$(selector).animate({params},speed,callback);

        必需的 params 参数定义形成动画的 CSS 属性。
        可选的 speed 参数规定效果的时长。它可以取以下值："slow"、"fast" 或毫秒。
        可选的 callback 参数是动画完成后所执行的函数名称。
        实例
        $("button").click(function(){
          $("div").animate({
            left:'250px',
            opacity:'0.5',
            height:'150px',
            width:'150px'
          });
        });

当使用 animate() 时，必须使用 Camel 标记法书写所有的属性名，
比如，必须使用 paddingLeft 而不是 padding-left，使用 marginRight 而不是 margin-right，等等。
同时，色彩动画并不包含在核心 jQuery 库中。
如果需要生成颜色动画，您需要从 jQuery.com 下载 Color Animations 插件。
